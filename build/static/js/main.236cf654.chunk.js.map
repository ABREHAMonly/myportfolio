{"version":3,"sources":["Notification.js","ChatBoard.js","AnimatedText.js","HomePage.js","index.js"],"names":["slideIn","keyframes","slideOut","NotificationWrapper","styled","div","props","isExiting","gradient","NotificationHeader","NotificationTitle","h4","NotificationIcon","FontAwesomeIcon","CloseButton","button","NotificationContent","ProgressContainer","ProgressBar","width","Timer","Notification","_ref","message","type","onClose","countdown","setCountdown","useState","setIsExiting","handleClose","useCallback","setTimeout","useEffect","timer","prev","clearTimeout","styles","getNotificationStyles","baseStyles","success","icon","faCheckCircle","iconColor","error","faExclamationTriangle","React","createElement","role","aria-live","style","color","aria-hidden","onClick","aria-label","faTimes","ChatBoard","messages","setMessages","saved","localStorage","getItem","JSON","parse","input","setInput","isChatOpen","setIsChatOpen","isLoading","setIsLoading","notification","setNotification","messagesEndRef","useRef","inputRef","setItem","stringify","typeMessage","text","sender","Promise","resolve","currentText","index","timestamp","Date","toLocaleTimeString","hour","minute","interval","setInterval","length","prevMessages","slice","id","now","clearInterval","handleSendMessage","async","trim","userMessage","aiResponse","axios","post","headers","Content-Type","data","response","botMessage","_error$response","_error$response$data","console","errorMessage","current","focus","toggleChat","scrollIntoView","behavior","block","className","solidCommentDots","size","clearChat","window","confirm","title","map","msg","key","navigator","clipboard","writeText","err","copyToClipboard","faCopy","ref","value","onChange","e","target","onKeyDown","shiftKey","preventDefault","placeholder","disabled","faPaperPlane","fadeIn","blink","TypingContainer","AnimatedHeading","h2","TypingTextWrapper","TypingContent","p","Cursor","span","TypingText","texts","speed","deleteSpeed","pauseBeforeDelete","pauseBetweenTexts","displayedText","setDisplayedText","setIndex","textIndex","setTextIndex","isDeleting","setIsDeleting","isPaused","setIsPaused","typingTimeout","deletingTimeout","AnimatedText","currentIndex","setCurrentIndex","prevIndex","projects","description","technologies","image","link","tags","keywords","skills","name","faJs","percentage","category","expertise","faReact","faMobileAlt","faNodeJs","faPython","faHtml5","faJava","faPhp","HomePage","isMenuOpen","setIsMenuOpen","visible","activeSkill","setActiveSkill","activeFilter","setActiveFilter","formData","setFormData","email","AOS","init","duration","once","easing","document","querySelectorAll","forEach","particle","Math","random","posX","posY","delay","height","left","top","animationDuration","animationDelay","opacity","handleInputChange","[object Object]","skillCategories","Set","skill","Helmet","content","itemScope","itemType","rel","href","property","@context","@type","jobTitle","url","sameAs","address","addressLocality","addressRegion","addressCountry","hasOccupation","Array","_","i","toggleMenu","body","overflow","faBars","faGithub","faLinkedin","faTwitter","faTelegram","faYoutube","faTiktok","src","alt","data-aos","itemProp","data-aos-delay","faChevronDown","download","faFileDownload","faEnvelope","project","substring","loading","tag","tech","filter","onMouseEnter","onMouseLeave","aria-valuenow","aria-valuemin","aria-valuemax","onSubmit","test","validateEmail","emailjs","send","process","from_name","to_name","from_email","to_email","required","getFullYear","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.236cf654.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { faTimes, faCheckCircle, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst slideIn = keyframes`\r\n  from { transform: translateX(120%); }\r\n  to { transform: translateX(0); }\r\n`;\r\n\r\nconst slideOut = keyframes`\r\n  from { transform: translateX(0); }\r\n  to { transform: translateX(120%); }\r\n`;\r\n\r\nconst NotificationWrapper = styled.div`\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  margin: 20px;\r\n  padding: 20px 25px;\r\n  border-radius: 14px;\r\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\r\n  z-index: 1000;\r\n  color: white;\r\n  font-family: 'DM Sans', sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 350px;\r\n  width: calc(100% - 40px);\r\n  transform: translateX(120%);\r\n  animation: ${props => props.isExiting ? slideOut : slideIn} 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;\r\n  background: ${props => props.gradient};\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  overflow: hidden;\r\n  backdrop-filter: blur(10px);\r\n`;\r\n\r\nconst NotificationHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst NotificationTitle = styled.h4`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  margin: 0;\r\n`;\r\n\r\nconst NotificationIcon = styled(FontAwesomeIcon)`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.3);\r\n    transform: rotate(90deg);\r\n  }\r\n`;\r\n\r\nconst NotificationContent = styled.div`\r\n  font-size: 15px;\r\n  line-height: 1.5;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ProgressContainer = styled.div`\r\n  width: 100%;\r\n  height: 4px;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  height: 100%;\r\n  width: ${props => props.width}%;\r\n  background-color: white;\r\n  transition: width 1s linear;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst Timer = styled.div`\r\n  position: absolute;\r\n  bottom: 8px;\r\n  right: 25px;\r\n  font-size: 12px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Notification = ({ message, type, onClose }) => {\r\n    const [countdown, setCountdown] = useState(5);\r\n    const [isExiting, setIsExiting] = useState(false);\r\n\r\n    const handleClose = useCallback(() => {\r\n        setIsExiting(true);\r\n        setTimeout(() => {\r\n            onClose();\r\n        }, 300);\r\n    }, [onClose]);\r\n\r\n    useEffect(() => {\r\n        if (countdown === 0) {\r\n            handleClose();\r\n            return;\r\n        }\r\n        const timer = setTimeout(() => {\r\n            setCountdown(prev => prev - 1);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [countdown, handleClose]);\r\n\r\n    const getNotificationStyles = () => {\r\n        const baseStyles = {\r\n            success: {\r\n                icon: faCheckCircle,\r\n                iconColor: '#d1fae5',\r\n                gradient: 'linear-gradient(135deg, rgba(16, 185, 129, 0.95), rgba(52, 211, 153, 0.95))'\r\n            },\r\n            error: {\r\n                icon: faExclamationTriangle,\r\n                iconColor: '#fee2e2',\r\n                gradient: 'linear-gradient(135deg, rgba(239, 68, 68, 0.95), rgba(248, 113, 113, 0.95))'\r\n            }\r\n        };\r\n        return baseStyles[type] || baseStyles.error;\r\n    };\r\n\r\n    const styles = getNotificationStyles();\r\n\r\n    return (\r\n        <NotificationWrapper\r\n            gradient={styles.gradient}\r\n            isExiting={isExiting}\r\n            role=\"alert\"\r\n            aria-live=\"assertive\"\r\n        >\r\n            <NotificationHeader>\r\n                <NotificationTitle>\r\n                    <NotificationIcon \r\n                        icon={styles.icon} \r\n                        style={{ color: styles.iconColor }} \r\n                        aria-hidden=\"true\"\r\n                    />\r\n                    {type === 'success' ? 'Success' : 'Error'}\r\n                </NotificationTitle>\r\n                <CloseButton \r\n                    onClick={handleClose}\r\n                    aria-label=\"Close notification\"\r\n                >\r\n                    <FontAwesomeIcon icon={faTimes} aria-hidden=\"true\" />\r\n                </CloseButton>\r\n            </NotificationHeader>\r\n            \r\n            <NotificationContent>{message}</NotificationContent>\r\n            \r\n            <ProgressContainer>\r\n                <ProgressBar width={(countdown / 5) * 100} />\r\n            </ProgressContainer>\r\n            \r\n            <Timer>{countdown}s</Timer>\r\n        </NotificationWrapper>\r\n    );\r\n};\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    type: PropTypes.oneOf(['success', 'error']).isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Notification;","import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faCommentDots as solidCommentDots, \r\n  faCopy, \r\n  faPaperPlane,\r\n  faTimes\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Notification from './Notification';\r\nimport './ChatBoard.css';\r\n\r\nconst ChatBoard = () => {\r\n  const [messages, setMessages] = useState(() => {\r\n    const saved = localStorage.getItem('chatMessages');\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n  const [input, setInput] = useState('');\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [notification, setNotification] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // API endpoint from Render\r\n  const API_URL = 'https://ai-chatbot-api-pmxt.onrender.com/api/chat';\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('chatMessages', JSON.stringify(messages));\r\n  }, [messages]);\r\n\r\n  const typeMessage = (text, sender) => {\r\n    return new Promise((resolve) => {\r\n      let currentText = '';\r\n      let index = 0;\r\n      const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n\r\n      const interval = setInterval(() => {\r\n        if (index < text.length) {\r\n          currentText += text[index];\r\n          setMessages((prevMessages) => [\r\n            ...prevMessages.slice(0, prevMessages.length - 1),\r\n            { \r\n              text: currentText, \r\n              sender, \r\n              timestamp,\r\n              id: Date.now() + index\r\n            },\r\n          ]);\r\n          index++;\r\n        } else {\r\n          clearInterval(interval);\r\n          resolve();\r\n        }\r\n      }, 20);\r\n    });\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (input.trim() === '') return;\r\n\r\n    const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    const userMessage = { \r\n      text: input, \r\n      sender: 'user', \r\n      timestamp,\r\n      id: Date.now()\r\n    };\r\n    \r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(API_URL, {\r\n        message: input,\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const aiResponse = response.data.response;\r\n      const botMessage = { \r\n        text: '', \r\n        sender: 'bot', \r\n        timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n        id: Date.now()\r\n      };\r\n      \r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n      await typeMessage(aiResponse, 'bot');\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      const errorMessage = error.response?.data?.error || error.message;\r\n      await typeMessage(\r\n        errorMessage || \"I'm having trouble connecting to the AI service. Please try again later.\", \r\n        'bot'\r\n      );\r\n      setNotification({\r\n        message: errorMessage || 'Connection error. Please check your network.',\r\n        type: 'error'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n      if (inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const toggleChat = () => {\r\n    setIsChatOpen(!isChatOpen);\r\n    if (!isChatOpen && inputRef.current) {\r\n      setTimeout(() => inputRef.current.focus(), 300);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = async (text) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setNotification({ \r\n        message: 'Copied to clipboard!', \r\n        type: 'success' \r\n      });\r\n    } catch (err) {\r\n      setNotification({ \r\n        message: 'Failed to copy text', \r\n        type: 'error' \r\n      });\r\n    }\r\n  };\r\n\r\n  const clearChat = () => {\r\n    if (window.confirm('Are you sure you want to clear the chat history?')) {\r\n      setMessages([]);\r\n      setNotification({\r\n        message: 'Chat history cleared',\r\n        type: 'success'\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ \r\n        behavior: 'smooth',\r\n        block: 'nearest'\r\n      });\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className={`chat-container ${isChatOpen ? 'open' : ''}`}>\r\n      {notification && (\r\n        <Notification \r\n          message={notification.message} \r\n          type={notification.type} \r\n          onClose={() => setNotification(null)} \r\n        />\r\n      )}\r\n      \r\n      <button \r\n        className=\"chat-toggle-button\"\r\n        onClick={toggleChat}\r\n        aria-label={isChatOpen ? 'Close chat' : 'Open chat'}\r\n      >\r\n        <FontAwesomeIcon \r\n          icon={solidCommentDots} \r\n          size=\"lg\" \r\n          className=\"chat-icon\" \r\n        />\r\n        {messages.length > 0 && (\r\n          <span className=\"unread-indicator\"></span>\r\n        )}\r\n      </button>\r\n\r\n      {isChatOpen && (\r\n        <div className=\"chat-board\">\r\n          <div className=\"chat-header\">\r\n            <h2>AI Assistant</h2>\r\n            <div className=\"chat-actions\">\r\n              <button \r\n                className=\"clear-chat\"\r\n                onClick={clearChat}\r\n                title=\"Clear chat history\"\r\n              >\r\n                Clear\r\n              </button>\r\n              <button \r\n                className=\"close-chat\"\r\n                onClick={toggleChat}\r\n                aria-label=\"Close chat\"\r\n              >\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"messages-container\">\r\n            <div className=\"messages\">\r\n              {messages.length === 0 && (\r\n                <div className=\"empty-state\">\r\n                  <p>How can I help you today?</p>\r\n                </div>\r\n              )}\r\n\r\n              {messages.map((msg) => (\r\n                <div \r\n                  key={msg.id}\r\n                  className={`message ${msg.sender}`}\r\n                >\r\n                  <div className=\"message-content\">\r\n                    {msg.text}\r\n                    {msg.sender === 'bot' && msg.text && (\r\n                      <button\r\n                        className=\"copy-button\"\r\n                        onClick={() => copyToClipboard(msg.text)}\r\n                        aria-label=\"Copy message\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faCopy} />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  <span className=\"timestamp\">{msg.timestamp}</span>\r\n                </div>\r\n              ))}\r\n\r\n              {isLoading && (\r\n                <div className=\"message bot typing\">\r\n                  <div className=\"typing-indicator\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"message-input\">\r\n            <input\r\n              ref={inputRef}\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder=\"Type your message...\"\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              className={`send-button ${input.trim() && !isLoading ? 'active' : ''}`}\r\n              onClick={handleSendMessage}\r\n              disabled={!input.trim() || isLoading}\r\n              aria-label=\"Send message\"\r\n            >\r\n              <FontAwesomeIcon icon={faPaperPlane} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBoard;","import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n// Animation keyframes\r\nconst fadeIn = keyframes`\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n`;\r\n\r\nconst blink = keyframes`\r\n  0%, 100% { opacity: 1; }\r\n  50% { opacity: 0; }\r\n`;\r\n\r\n// Styled components\r\nconst TypingContainer = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  text-align: left;\r\n`;\r\n\r\nconst AnimatedHeading = styled.h2`\r\n  font-size: 2.5rem;\r\n  font-weight: 700;\r\n  margin-bottom: 1.5rem;\r\n  background: linear-gradient(to right, #6366f1, #8b5cf6);\r\n  -webkit-background-clip: text;\r\n  background-clip: text;\r\n  color: transparent;\r\n  animation: ${fadeIn} 0.8s ease-out;\r\n  font-family: 'Space Grotesk', sans-serif;\r\n`;\r\n\r\nconst TypingTextWrapper = styled.div`\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst TypingContent = styled.p`\r\n  font-size: 1.1rem;\r\n  line-height: 1.6;\r\n  color: #e2e8f0;\r\n  margin: 0;\r\n  font-family: 'DM Sans', sans-serif;\r\n  display: inline;\r\n`;\r\n\r\nconst Cursor = styled.span`\r\n  display: inline-block;\r\n  width: 8px;\r\n  height: 1.2rem;\r\n  background: #8b5cf6;\r\n  margin-left: 4px;\r\n  vertical-align: middle;\r\n  animation: ${blink} 1s infinite;\r\n`;\r\n\r\nconst TypingText = ({ \r\n  texts, \r\n  speed = 50, \r\n  deleteSpeed = 30, \r\n  pauseBeforeDelete = 1500,\r\n  pauseBetweenTexts = 500 \r\n}) => {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n    const [index, setIndex] = useState(0);\r\n    const [textIndex, setTextIndex] = useState(0);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isPaused) return;\r\n\r\n        if (!isDeleting && index < texts[textIndex].length) {\r\n            const typingTimeout = setTimeout(() => {\r\n                setDisplayedText(prev => prev + texts[textIndex][index]);\r\n                setIndex(prev => prev + 1);\r\n            }, speed);\r\n            return () => clearTimeout(typingTimeout);\r\n        } \r\n        \r\n        if (!isDeleting && index === texts[textIndex].length) {\r\n            setIsPaused(true);\r\n            setTimeout(() => {\r\n                setIsDeleting(true);\r\n                setIsPaused(false);\r\n            }, pauseBeforeDelete);\r\n            return;\r\n        }\r\n        \r\n        if (isDeleting && index > 0) {\r\n            const deletingTimeout = setTimeout(() => {\r\n                setDisplayedText(prev => prev.slice(0, -1));\r\n                setIndex(prev => prev - 1);\r\n            }, deleteSpeed);\r\n            return () => clearTimeout(deletingTimeout);\r\n        }\r\n        \r\n        if (isDeleting && index === 0) {\r\n            setIsPaused(true);\r\n            setTimeout(() => {\r\n                setIsDeleting(false);\r\n                setTextIndex(prev => (prev + 1) % texts.length);\r\n                setIsPaused(false);\r\n            }, pauseBetweenTexts);\r\n        }\r\n    }, [index, isDeleting, isPaused, texts, textIndex, speed, deleteSpeed, pauseBeforeDelete, pauseBetweenTexts]);\r\n\r\n    return (\r\n        <TypingTextWrapper>\r\n            <TypingContent>\r\n                {displayedText}\r\n                <Cursor />\r\n            </TypingContent>\r\n        </TypingTextWrapper>\r\n    );\r\n};\r\n\r\nconst AnimatedText = () => {\r\n    const texts = [\r\n        \"Innovative Solutions\",\r\n        \"Creative Development\",\r\n        \"Quality Code\",\r\n        \"User Experience\",\r\n        \"Technical Excellence\"\r\n    ];\r\n    \r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentIndex(prevIndex => (prevIndex + 1) % texts.length);\r\n        }, 3000);\r\n        return () => clearInterval(interval);\r\n    }, [texts.length]);\r\n\r\n    const introTexts = [\r\n        \"Hello! I'm Abreham Yetwale.\",\r\n        \"Full-stack developer with a Bachelor's in Computer Science.\",\r\n        \"Graduated from Wolaita Sodo University.\",\r\n        \"Passionate about creating impactful digital experiences.\",\r\n        \"Let's build something amazing together!\"\r\n    ];\r\n\r\n    return (\r\n        <TypingContainer>\r\n            <AnimatedHeading>\r\n                {texts[currentIndex]}\r\n            </AnimatedHeading>\r\n            <TypingText \r\n                texts={introTexts} \r\n                speed={40} \r\n                deleteSpeed={30} \r\n                pauseBeforeDelete={2000}\r\n                pauseBetweenTexts={800}\r\n            />\r\n        </TypingContainer>\r\n    );\r\n};\r\n\r\nexport { TypingText, AnimatedText };","import React, { useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport './HomePage.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faLinkedin, faTwitter, faTelegram, faYoutube, faTiktok, faJs, faReact, faNodeJs, faPython, faHtml5, faJava, faPhp } from '@fortawesome/free-brands-svg-icons';\r\nimport { faBars, faMobileAlt, faEnvelope, faFileDownload, faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\nimport emailjs from 'emailjs-com';\r\nimport Notification from './Notification';\r\nimport ChatBoard from './ChatBoard';\r\nimport { AnimatedText } from './AnimatedText';\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\n// Project data with enhanced descriptions for SEO\r\nconst projects = [\r\n    {\r\n        title: \"Healthcare Management System with Chatbot\",\r\n        description: \"A comprehensive hospital management system with integrated AI chatbot functionality built with React, Node.js, and MongoDB. This system streamlines patient records, appointments, and hospital administration.\",\r\n        technologies: [\"React\", \"Node.js\", \"Express\", \"MongoDB\"],\r\n        image: \"/hospitalmanagementsystem.png\",\r\n        link: \"https://testhospitalmanagment.netlify.app\",\r\n        tags: [\"Full Stack\", \"Healthcare\"],\r\n        keywords: [\"hospital management\", \"healthcare software\", \"medical chatbot\"]\r\n    },\r\n    {\r\n        title: \"Anonymous Message Board\",\r\n        description: \"Secure platform for anonymous messaging with category filtering and spam protection. Built with MERN stack (MongoDB, Express, React, Node.js) for secure communication.\",\r\n        technologies: [\"React\", \"Node.js\", \"Express\", \"MongoDB\"],\r\n        image: \"/logoanonymusm.png\",\r\n        link: \"https://anonymousboard.netlify.app/\",\r\n        tags: [\"Full Stack\", \"Security\"],\r\n        keywords: [\"anonymous messaging\", \"secure board\", \"privacy app\"]\r\n    },\r\n    {\r\n        title: \"Nutritional Value Management\",\r\n        description: \"Android mobile app analyzing nutritional values of Wolaita traditional foods. Developed with Java, Android SDK, and Firebase for nutrition tracking and food analysis.\",\r\n        technologies: [\"Java\", \"Android SDK\", \"Firebase and SQlite\"],\r\n        image: \"/Nutritional Value Management of Wolaita Traditional Food.png\",\r\n        link: \"https://github.com/ABREHAMonly/wolaitan-traditional-food-NV-mobile-app\",\r\n        tags: [\"Mobile\", \"Health\"],\r\n        keywords: [\"nutrition app\", \"food analysis\", \"health mobile app\"]\r\n    },\r\n    {\r\n        title: \"Healthcare Chatbot\",\r\n        description: \"AI-powered multilingual healthcare chatbot using NLP and machine learning. Built with Python, React, Flask, NLTK and TensorFlow for medical inquiries and symptom checking.\",\r\n        technologies: [\"Python\", \"React.Js\", \"Flask\", \"NLTK\", \"TensorFlow\"],\r\n        image: \"/chatbot.png\",\r\n        link: \"https://github.com/ABREHAMonly/Chatbot-in-healthcare-web-based\",\r\n        tags: [\"AI\", \"Healthcare\"],\r\n        keywords: [\"health chatbot\", \"medical AI\", \"symptom checker\"]\r\n    },\r\n    {\r\n        title: \"Lost And Found System\",\r\n        description: \"Community lost and found mobile application with React Native, Firebase and Google Maps API integration for item recovery and community engagement.\",\r\n        technologies: [\"React Native\", \"Firebase\", \"Google Maps API\"],\r\n        image: \"/LostAndFoundlogo.png\",\r\n        link: \"#\",\r\n        tags: [\"Mobile\", \"Community\"],\r\n        keywords: [\"lost and found app\", \"community app\", \"item recovery\"]\r\n    },\r\n    {\r\n        title: \"New Project Coming Soon\",\r\n        description: \"Exciting new full-stack development project currently in progress. Check back soon for updates on this React and Node.js application.\",\r\n        technologies: [\"React\", \"Node.js\"],\r\n        image: \"/commingsoon.png\",\r\n        link: \"#\",\r\n        tags: [\"Upcoming\"],\r\n        keywords: [\"new project\", \"coming soon\", \"portfolio work\"]\r\n    },\r\n];\r\n\r\n// Skills data with SEO-friendly categorization\r\nconst skills = [\r\n    { name: \"JavaScript\", icon: faJs, percentage: 85, category: \"Frontend\", expertise: \"Advanced\" },\r\n    { name: \"React\", icon: faReact, percentage: 90, category: \"Frontend\", expertise: \"Expert\" },\r\n    { name: \"React Native\", icon: faMobileAlt, percentage: 85, category: \"Mobile\", expertise: \"Advanced\" },\r\n    { name: \"Node.js\", icon: faNodeJs, percentage: 80, category: \"Backend\", expertise: \"Advanced\" },\r\n    { name: \"Python\", icon: faPython, percentage: 75, category: \"Backend\", expertise: \"Intermediate\" },\r\n    { name: \"HTML & CSS\", icon: faHtml5, percentage: 95, category: \"Frontend\", expertise: \"Expert\" },\r\n    { name: \"Java\", icon: faJava, percentage: 70, category: \"Mobile\", expertise: \"Intermediate\" },\r\n    { name: \"PHP\", icon: faPhp, percentage: 70, category: \"Backend\", expertise: \"Intermediate\" }\r\n];\r\n\r\nconst HomePage = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n    const [notification, setNotification] = useState({ message: '', type: '', visible: false });\r\n    const [activeSkill, setActiveSkill] = useState(null);\r\n    const [activeFilter, setActiveFilter] = useState(\"All\");\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        message: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        AOS.init({ \r\n            duration: 800,\r\n            once: true,\r\n            easing: 'ease-out-quart'\r\n        });\r\n        \r\n        // Generate random particles\r\n        const particles = document.querySelectorAll('.particle');\r\n        particles.forEach(particle => {\r\n            const size = Math.random() * 15 + 5;\r\n            const posX = Math.random() * 100;\r\n            const posY = Math.random() * 100;\r\n            const duration = Math.random() * 20 + 10;\r\n            const delay = Math.random() * 5;\r\n            \r\n            particle.style.width = `${size}px`;\r\n            particle.style.height = `${size}px`;\r\n            particle.style.left = `${posX}%`;\r\n            particle.style.top = `${posY}%`;\r\n            particle.style.animationDuration = `${duration}s`;\r\n            particle.style.animationDelay = `${delay}s`;\r\n            particle.style.opacity = Math.random() * 0.6 + 0.2;\r\n        });\r\n\r\n        const timer = setTimeout(() => setIsLoading(false), 2500);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    const toggleMenu = () => {\r\n        setIsMenuOpen(!isMenuOpen);\r\n        document.body.style.overflow = isMenuOpen ? 'auto' : 'hidden';\r\n    };\r\n\r\n    const validateEmail = (email) => {\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return emailPattern.test(email);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const sendEmail = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!formData.name || !formData.email || !formData.message) {\r\n            setNotification({ message: 'All fields are required!', type: 'error', visible: true });\r\n            return;\r\n        }\r\n\r\n        if (!validateEmail(formData.email)) {\r\n            setNotification({ message: 'Please enter a valid email address!', type: 'error', visible: true });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await emailjs.send(\r\n                process.env.REACT_APP_SERVICE_ID,\r\n                process.env.REACT_APP_TEMPLATE_ID,\r\n                {\r\n                    from_name: formData.name,\r\n                    to_name: \"Abreham\",\r\n                    from_email: formData.email,\r\n                    to_email: \"abrehamonly@gmail.com\",\r\n                    message: formData.message\r\n                },\r\n                process.env.REACT_APP_PUBLIC_KEY\r\n            );\r\n\r\n            setNotification({ \r\n                message: 'Your message has been sent successfully!', \r\n                type: 'success', \r\n                visible: true \r\n            });\r\n            \r\n            setFormData({\r\n                name: '',\r\n                email: '',\r\n                message: ''\r\n            });\r\n            \r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setNotification({ \r\n                message: 'Failed to send message. Please try again later.', \r\n                type: 'error', \r\n                visible: true \r\n            });\r\n        }\r\n    };\r\n\r\n    const skillCategories = [\"All\", ...new Set(skills.map(skill => skill.category))];\r\n\r\n    // Generate JSON-LD structured data\r\n    const generateStructuredData = () => {\r\n        return {\r\n            \"@context\": \"https://schema.org\",\r\n            \"@type\": \"Person\",\r\n            \"name\": \"Abreham Yetwale\",\r\n            \"jobTitle\": \"Full-stack Developer\",\r\n            \"url\": \"https://abrehamyetwale.netlify.app\",\r\n            \"sameAs\": [\r\n                \"https://github.com/ABREHAMonly\",\r\n                \"https://linkedin.com/in/abreham-yetwale\",\r\n                \"https://x.com/Abrehamonly\",\r\n                \"https://t.me/ABREHAMonly\",\r\n                \"https://youtube.com/@abtuber-k7k\",\r\n                \"https://www.tiktok.com/@abrehamonly\"\r\n            ],\r\n            \"image\": \"https://abrehamyetwale.netlify.app/abreham-yetwale-profile.jpg\",\r\n            \"description\": \"Portfolio of Abreham Yetwale, full-stack developer specializing in React, Node.js, and mobile applications.\",\r\n            \"address\": {\r\n                \"@type\": \"PostalAddress\",\r\n                \"addressLocality\": \"Addis Ababa\",\r\n                \"addressRegion\": \"Addis Ababa\",\r\n                \"addressCountry\": \"Ethiopia\"\r\n            },\r\n            \"hasOccupation\": {\r\n                \"@type\": \"Occupation\",\r\n                \"name\": \"Software Developer\",\r\n                \"skills\": skills.map(skill => skill.name)\r\n            }\r\n        };\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"loading-screen\">\r\n                <Helmet>\r\n                    <title>Abreham Yetwale | Full-stack Developer Portfolio</title>\r\n                    <meta name=\"description\" content=\"Loading portfolio of Abreham Yetwale, full-stack developer specializing in React, Node.js, and mobile applications.\" />\r\n                </Helmet>\r\n                <div className=\"loading-content\">\r\n                    <div className=\"loading-spinner\">\r\n                        <div className=\"spinner-core\"></div>\r\n                        <div className=\"spinner-outer\"></div>\r\n                    </div>\r\n                    <h2 className=\"loading-text\">Loading Portfolio</h2>\r\n                    <div className=\"progress-track\">\r\n                        <div className=\"progress-bar\"></div>\r\n                    </div>\r\n                    <p className=\"loading-subtext\">Abreham Yetwale · Full Stack Developer</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" itemScope itemType=\"https://schema.org/Person\">\r\n            <Helmet>\r\n                {/* Primary Meta Tags */}\r\n                <title>Abreham Yetwale | Full-stack Developer Portfolio</title>\r\n                <meta name=\"title\" content=\"Abreham Yetwale | Full-stack Developer Portfolio\" />\r\n                <meta name=\"description\" content=\"Portfolio of Abreham Yetwale, full-stack developer specializing in React, Node.js, React Native, and Python. View my projects and contact me for opportunities.\" />\r\n                <meta name=\"keywords\" content=\"full-stack developer, React developer, Node.js developer, portfolio, web developer, mobile developer, Abreham Yetwale\" />\r\n                <meta name=\"author\" content=\"Abreham Yetwale\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n                <meta name=\"robots\" content=\"index, follow\" />\r\n                <link rel=\"canonical\" href=\"https://abrehamyetwale.netlify.app\" />\r\n\r\n                {/* Open Graph / Facebook */}\r\n                <meta property=\"og:type\" content=\"website\" />\r\n                <meta property=\"og:url\" content=\"https://abrehamyetwale.netlify.app\" />\r\n                <meta property=\"og:title\" content=\"Abreham Yetwale | Full-stack Developer Portfolio\" />\r\n                <meta property=\"og:description\" content=\"Portfolio of Abreham Yetwale, full-stack developer specializing in React, Node.js, and mobile applications.\" />\r\n                <meta property=\"og:image\" content=\"https://abrehamyetwale.netlify.app/abreham-yetwale-profile.jpg\" />\r\n\r\n                {/* Twitter */}\r\n                <meta property=\"twitter:card\" content=\"summary_large_image\" />\r\n                <meta property=\"twitter:url\" content=\"https://abrehamyetwale.netlify.app\" />\r\n                <meta property=\"twitter:title\" content=\"Abreham Yetwale | Full-stack Developer Portfolio\" />\r\n                <meta property=\"twitter:description\" content=\"Portfolio of Abreham Yetwale, full-stack developer specializing in React, Node.js, and mobile applications.\" />\r\n                <meta property=\"twitter:image\" content=\"https://abrehamyetwale.netlify.app/abreham-yetwale-profile.jpg\" />\r\n                <meta property=\"twitter:creator\" content=\"@Abrehamonly\" />\r\n\r\n                {/* Structured Data */}\r\n                <script type=\"application/ld+json\">\r\n                    {JSON.stringify(generateStructuredData())}\r\n                </script>\r\n            </Helmet>\r\n\r\n            {/* Background Elements */}\r\n            <div className=\"gradient-background\"></div>\r\n            <div className=\"particles\">\r\n                {[...Array(30)].map((_, i) => (\r\n                    <div key={i} className=\"particle\"></div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Header */}\r\n            <header className={`header ${isMenuOpen ? 'menu-open' : ''}`}>\r\n                <div className=\"menu-toggle\" onClick={toggleMenu} aria-label=\"Toggle menu\">\r\n                    <FontAwesomeIcon icon={faBars} />\r\n                </div>\r\n                <nav className={`header-links ${isMenuOpen ? 'open' : ''}`}>\r\n                    <a href=\"#about\" onClick={() => setIsMenuOpen(false)} aria-label=\"About section\">About</a>\r\n                    <a href=\"#projects\" onClick={() => setIsMenuOpen(false)} aria-label=\"Projects section\">Projects</a>\r\n                    <a href=\"#skills\" onClick={() => setIsMenuOpen(false)} aria-label=\"Skills section\">Skills</a>\r\n                    <a href=\"#contact\" onClick={() => setIsMenuOpen(false)} aria-label=\"Contact section\">Contact</a>\r\n                    <div className=\"mobile-social\">\r\n                        <a href=\"https://github.com/ABREHAMonly\" aria-label=\"GitHub profile\"><FontAwesomeIcon icon={faGithub} /></a>\r\n                        <a href=\"https://linkedin.com/in/abreham-yetwale\" aria-label=\"LinkedIn profile\"><FontAwesomeIcon icon={faLinkedin} /></a>\r\n                        <a href=\"https://x.com/Abrehamonly\" aria-label=\"Twitter profile\"><FontAwesomeIcon icon={faTwitter} /></a>\r\n                        <a href=\"https://t.me/ABREHAMonly\" aria-label=\"Telegram profile\"><FontAwesomeIcon icon={faTelegram} /></a>\r\n                        <a href=\"https://youtube.com/@abtuber-k7k?si=uD9va_BCRO8qB8fM\" aria-label=\"YouTube channel\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faYoutube} /></a>\r\n                        <a href=\"https://www.tiktok.com/@abrehamonly\" aria-label=\"TikTok profile\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faTiktok} /></a>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"logo\">\r\n                    <img src=\"/1logoab.png\" alt=\"Abreham Yetwale Logo - Full-stack Developer\" />\r\n                </div>\r\n            </header>\r\n\r\n            {/* Main Content */}\r\n            <main className=\"main-content\">\r\n                {/* Hero Section */}\r\n                <section className=\"hero-section\" id=\"home\" itemScope itemType=\"https://schema.org/ProfilePage\">\r\n                    <div className=\"hero-content\">\r\n                        <div className=\"profile-container\" data-aos=\"fade-up\">\r\n                            <div className=\"profile-photo\">\r\n                                <img src=\"/abreham-yetwale-profile.jpg\" alt=\"Abreham Yetwale - Full-stack Developer\" itemProp=\"image\" />\r\n                                <div className=\"photo-border\"></div>\r\n                            </div>\r\n                            <div className=\"profile-info\">\r\n                                <h1 itemProp=\"name\">Abreham Yetwale</h1>\r\n                                <p className=\"title\" itemProp=\"jobTitle\">Full-stack Developer</p>\r\n                                <div className=\"social-links\">\r\n                                    <a href=\"https://github.com/ABREHAMonly\" aria-label=\"GitHub profile\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faGithub} /></a>\r\n                                    <a href=\"https://linkedin.com/in/abreham-yetwale\" aria-label=\"LinkedIn profile\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faLinkedin} /></a>\r\n                                    <a href=\"https://x.com/Abrehamonly\" aria-label=\"Twitter profile\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faTwitter} /></a>\r\n                                    <a href=\"https://t.me/ABREHAMonly\" aria-label=\"Telegram profile\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faTelegram} /></a>\r\n                                    <a href=\"https://youtube.com/@abtuber-k7k?si=uD9va_BCRO8qB8fM\" aria-label=\"YouTube channel\" target=\"_blank\" rel=\"noopener noreferrer\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faYoutube} /></a>\r\n                                    <a href=\"https://www.tiktok.com/@abrehamonly?_t=ZM-8vOdqF30EoJ&_r=1\" aria-label=\"TikTok profile\" target=\"_blank\" rel=\"noopener noreferrer\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faTiktok} /></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"animated-text-section\" data-aos=\"fade-up\" data-aos-delay=\"300\">\r\n                            <AnimatedText />\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"#about\" className=\"scroll-down\" aria-label=\"Scroll down to about section\">\r\n                        <FontAwesomeIcon icon={faChevronDown} />\r\n                    </a>\r\n                </section>\r\n\r\n                {/* About Section */}\r\n                <section id=\"about\" className=\"section\" data-aos=\"fade-up\" itemScope itemType=\"https://schema.org/AboutPage\">\r\n                    <div className=\"section-header\">\r\n                        <h2>About Me</h2>\r\n                        <div className=\"divider\"></div>\r\n                    </div>\r\n                    <div className=\"glass-card about-content\">\r\n                        <div className=\"about-text\" itemProp=\"description\">\r\n                            <p>\r\n                                I'm a passionate full-stack developer with expertise in building modern web and mobile applications. \r\n                                With a strong foundation in computer science and hands-on experience in JavaScript, React, Node.js, and Python, \r\n                                I create efficient, scalable, and user-friendly solutions.\r\n                            </p>\r\n                            <p>\r\n                                My journey in software development began with a curiosity for problem-solving and has evolved \r\n                                into a career where I combine technical skills with creative thinking to deliver impactful applications.\r\n                                I specialize in creating responsive web applications, mobile apps, and AI-powered solutions.\r\n                            </p>\r\n                            <div className=\"about-actions\">\r\n                                <a href=\"/Abreham_yetwale_CV.pdf\" className=\"button\" download aria-label=\"Download CV\">\r\n                                    <FontAwesomeIcon icon={faFileDownload} /> Download CV\r\n                                </a>\r\n                                <a href=\"#contact\" className=\"button outline\" aria-label=\"Contact me\">\r\n                                    <FontAwesomeIcon icon={faEnvelope} /> Contact Me\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"about-stats\">\r\n                            <div className=\"stat-item\">\r\n                                <h3>15+</h3>\r\n                                <p>Projects Completed</p>\r\n                            </div>\r\n                            <div className=\"stat-item\">\r\n                                <h3>3+</h3>\r\n                                <p>Years Experience</p>\r\n                            </div>\r\n                            <div className=\"stat-item\">\r\n                                <h3>95%</h3>\r\n                                <p>Client Satisfaction</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/* Projects Section */}\r\n                <section id=\"projects\" className=\"section\" itemScope itemType=\"https://schema.org/ItemList\">\r\n                    <div className=\"section-header\">\r\n                        <h2>Featured Projects</h2>\r\n                        <div className=\"divider\"></div>\r\n                    </div>\r\n                    <div className=\"projects-grid\">\r\n                        {projects.map((project, index) => (\r\n                            <div \r\n                                className=\"project-card glass-card\" \r\n                                key={index} \r\n                                data-aos=\"fade-up\" \r\n                                data-aos-delay={index * 100}\r\n                                itemScope\r\n                                itemType=\"https://schema.org/CreativeWork\"\r\n                            >\r\n                                <div className=\"project-image\">\r\n                                    <img \r\n                                        src={project.image} \r\n                                        alt={`${project.title} - ${project.description.substring(0, 60)}...`} \r\n                                        loading=\"lazy\"\r\n                                        itemProp=\"image\"\r\n                                    />\r\n                                    <div className=\"project-tags\">\r\n                                        {project.tags.map((tag, i) => (\r\n                                            <span key={i} className=\"tag\">{tag}</span>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"project-info\">\r\n                                    <h3 itemProp=\"name\">{project.title}</h3>\r\n                                    <p className=\"project-description\" itemProp=\"description\">{project.description}</p>\r\n                                    <div className=\"technologies\" itemProp=\"keywords\">\r\n                                        {project.technologies.map((tech, i) => (\r\n                                            <span key={i} className=\"tech\">{tech}</span>\r\n                                        ))}\r\n                                    </div>\r\n                                    <a \r\n                                        href={project.link} \r\n                                        className=\"button\" \r\n                                        target=\"_blank\" \r\n                                        rel=\"noopener noreferrer\"\r\n                                        aria-label={`View ${project.title} project`}\r\n                                        itemProp=\"url\"\r\n                                    >\r\n                                        View Project\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n\r\n                {/* Skills Section */}\r\n                <section id=\"skills\" className=\"section\">\r\n                    <div className=\"section-header\">\r\n                        <h2>Technical Skills</h2>\r\n                        <div className=\"divider\"></div>\r\n                    </div>\r\n                    <div className=\"skills-filter\">\r\n                        {skillCategories.map(category => (\r\n                            <button\r\n                                key={category}\r\n                                className={`filter-btn ${activeFilter === category ? 'active' : ''}`}\r\n                                onClick={() => setActiveFilter(category)}\r\n                                aria-label={`Filter skills by ${category}`}\r\n                            >\r\n                                {category}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"skills-container\">\r\n                        {skills\r\n                            .filter(skill => activeFilter === \"All\" || skill.category === activeFilter)\r\n                            .map((skill, index) => (\r\n                                <div \r\n                                    className={`skill-item glass-card ${activeSkill === index ? 'active' : ''}`}\r\n                                    key={index}\r\n                                    onMouseEnter={() => setActiveSkill(index)}\r\n                                    onMouseLeave={() => setActiveSkill(null)}\r\n                                    onClick={() => setActiveSkill(index)}\r\n                                    data-aos=\"fade-up\"\r\n                                    data-aos-delay={index * 50}\r\n                                    itemScope\r\n                                    itemType=\"https://schema.org/Intangible\"\r\n                                >\r\n                                    <div className=\"skill-icon\">\r\n                                        <FontAwesomeIcon icon={skill.icon} />\r\n                                    </div>\r\n                                    <div className=\"skill-info\">\r\n                                        <h4 itemProp=\"name\">{skill.name}</h4>\r\n                                        <meta itemProp=\"skillLevel\" content={skill.expertise} />\r\n                                        <div className=\"skill-progress\">\r\n                                            <div \r\n                                                className=\"progress-bar\" \r\n                                                style={{ width: `${activeSkill === index ? skill.percentage : 0}%` }}\r\n                                                aria-valuenow={skill.percentage}\r\n                                                aria-valuemin=\"0\"\r\n                                                aria-valuemax=\"100\"\r\n                                            ></div>\r\n                                            <span>{activeSkill === index ? `${skill.percentage}%` : '0%'}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </section>\r\n\r\n                {/* Contact Section */}\r\n                <section id=\"contact\" className=\"section\" itemScope itemType=\"https://schema.org/ContactPage\">\r\n                    <div className=\"section-header\">\r\n                        <h2>Get In Touch</h2>\r\n                        <div className=\"divider\"></div>\r\n                    </div>\r\n                    <div className=\"contact-container glass-card\" data-aos=\"fade-up\">\r\n                        <div className=\"contact-info\">\r\n                            <h3>Let's Work Together</h3>\r\n                            <p itemProp=\"description\">\r\n                                I'm currently available for freelance work and full-time opportunities. \r\n                                If you have a project that needs creative solutions, let's discuss how I can help.\r\n                            </p>\r\n                            <div className=\"contact-methods\">\r\n                                <a href=\"mailto:Abrehamonly@gmail.com\" className=\"contact-link\" itemProp=\"email\">\r\n                                    <FontAwesomeIcon icon={faEnvelope} /> Abrehamonly@gmail.com\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={sendEmail} className=\"contact-form\" itemScope itemType=\"https://schema.org/ContactForm\">\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Your Name\"\r\n                                    value={formData.name}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    itemProp=\"name\"\r\n                                    aria-label=\"Your name\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Your Email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    itemProp=\"email\"\r\n                                    aria-label=\"Your email\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea\r\n                                    name=\"message\"\r\n                                    placeholder=\"Your Message\"\r\n                                    value={formData.message}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    itemProp=\"message\"\r\n                                    aria-label=\"Your message\"\r\n                                ></textarea>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"button\" aria-label=\"Send message\">\r\n                                Send Message\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n\r\n            {/* Footer */}\r\n            <footer className=\"footer\" itemScope itemType=\"https://schema.org/WPFooter\">\r\n                <div className=\"footer-content\">\r\n                    <div className=\"footer-logo\">\r\n                        <img src=\"/1logoab.png\" alt=\"Abreham Yetwale Logo\" />\r\n                        <p itemProp=\"name\">Abreham Yetwale</p>\r\n                    </div>\r\n                    <div className=\"footer-links\">\r\n                        <a href=\"#about\" aria-label=\"About section\">About</a>\r\n                        <a href=\"#projects\" aria-label=\"Projects section\">Projects</a>\r\n                        <a href=\"#skills\" aria-label=\"Skills section\">Skills</a>\r\n                        <a href=\"#contact\" aria-label=\"Contact section\">Contact</a>\r\n                    </div>\r\n                    <div className=\"social-icons\">\r\n                        <a href=\"https://github.com/ABREHAMonly\" aria-label=\"GitHub profile\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faGithub} /></a>\r\n                        <a href=\"https://linkedin.com/in/abreham-yetwale\" aria-label=\"LinkedIn profile\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faLinkedin} /></a>\r\n                        <a href=\"https://x.com/Abrehamonly\" aria-label=\"Twitter profile\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faTwitter} /></a>\r\n                        <a href=\"https://t.me/ABREHAMonly\" aria-label=\"Telegram profile\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faTelegram} /></a>\r\n                        <a href=\"https://youtube.com/@abtuber-k7k?si=uD9va_BCRO8qB8fM\" aria-label=\"YouTube channel\" target=\"_blank\" rel=\"noopener noreferrer\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faYoutube} /></a>\r\n                        <a href=\"https://www.tiktok.com/@abrehamonly?_t=ZM-8vOdqF30EoJ&_r=1\" aria-label=\"TikTok profile\" target=\"_blank\" rel=\"noopener noreferrer\" itemProp=\"sameAs\"><FontAwesomeIcon icon={faTiktok} /></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer-bottom\">\r\n                    <p>&copy; {new Date().getFullYear()} <span itemProp=\"name\">Abreham Yetwale</span>. All rights reserved.</p>\r\n                </div>\r\n            </footer>\r\n\r\n            {/* Notification */}\r\n            {notification.visible && (\r\n                <Notification \r\n                    message={notification.message} \r\n                    type={notification.type} \r\n                    onClose={() => setNotification({ ...notification, visible: false })} \r\n                />\r\n            )}\r\n            \r\n            {/* Chat Board */}\r\n            <ChatBoard />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport HomePage from './HomePage';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(<HomePage />);"],"sourceRoot":""}